[build-system]
    build-backend = "poetry.core.masonry.api"
    requires      = ["poetry-core>=1.0.0"]

[tool.poetry]
    authors = ["Noah Jenner <noah.jenner@proton.me>"]
    classifiers = [
        "Development Status :: 4 - Beta",
        "Environment :: Console",
        "Intended Audience :: End Users/Desktop",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: Implementation :: CPython",
        "Topic :: Utilities",
        "Typing :: Typed",
    ]
    description = "An average platinum price calculator for tradeable items in Warframe."
    documentation = "https://warmac.readthedocs.io/en/"
    # include = [""]
    keywords = [
        "platinum",
        "warframe calculator",
        "warframe market",
        "warframe",
    ]
    license = "MIT"
    maintainers = ["Noah Jenner <noah.jenner@proton.me>"]
    name = "WarMAC"
    packages = [{include = "warmac"}]
    readme = "README.md"
    repository = "https://github.com/Eutropios/WarMAC"
    version = "0.0.5"
[tool.poetry.dependencies]
    python  = ">=3.8,<3.13"
    urllib3 = "^2.0.4"
[tool.poetry.scripts]
    warmac = "warmac.__init__:console_main"
[tool.poetry.urls]
    "Bug Tracker" = "https://github.com/Eutropios/WarMAC/issues"
[tool.poetry.group.docs]
    optional = true
[tool.poetry.group.docs.dependencies]
    esbonio = "*"
    furo = ">=2023.9"
    sphinx = [ # 6 is lower bound because of furo
        {version = ">=6,<7.2", python = "~3.8"},
        {version = ">=6,<8", python = ">=3.9,<3.13"},
    ]
    sphinx-copybutton = ">=0.5.2,<1"
    sphinx-inline-tabs = ">=2023.4.21"
    sphinx-notfound-page = "^1"
    sphinx_last_updated_by_git = ">=0.3.6,<1"
[tool.poetry.group.dev]
    optional = true
[tool.poetry.group.dev.dependencies]
    pipdeptree = "^2.13"
    vermin     = "^1.6"
    viztracer  = ">=0.16,<1"

[tool.docformatter]
    black               = true
    pre-summary-newline = true
    recursive           = true
    style               = "sphinx"
    wrap-descriptions   = 72
    wrap-summaries      = 72

[tool.mypy]
    exclude = [
        '\.git',
        '\.hg',
        '\.mypy_cache',
        '\.ruff_cache',
        '\.tox',
        '\.venv',
        '_build',
        'buck-out',
        'build',
        'dist',
    ]
    python_version = "3.12"
    strict = true

[tool.ruff]
    explicit-preview-rules = false
    ignore = [
        "AIR",
        "ANN101",
        "COM812",
        "DJ",
        "ERA001",
        "FIX",
        "ISC001",
        "ISC002",
        "NPY",
        "PD",
        "SLF001",
        "T20",
    ]
    indent-width = 4
    line-length = 88
    preview = true
    select = ["ALL"]
    show-fixes = true
    target-version = "py38"

[tool.ruff.flake8-copyright]
    author = "Noah Jenner"

[tool.ruff.flake8-implicit-str-concat]
    allow-multiline = true

[tool.ruff.flake8-quotes]
    docstring-quotes = "double"
    inline-quotes    = "double"
    multiline-quotes = "double"

[tool.ruff.format]
    exclude = [
        ".git",
        ".hg",
        ".mypy_cache",
        ".tox",
        ".venv",
        "_build",
        "buck-out",
        "build",
        "dist",
        "ruff_cache",
    ]
    indent-style = "space"
    line-ending = "auto"
    quote-style = "double"
    skip-magic-trailing-comma = false

[tool.ruff.flake8-type-checking]
    exempt-modules = ["typing"]
    strict         = true

[tool.ruff.isort]
    required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
    "docs/source/conf.py" = ["D100", "D104", "I002", "INP001"]
    "tests/__init__.py"   = ["D100", "D104", "I002"]
    "warmac/__main__.py"  = ["D100", "D104", "I002"]

[tool.ruff.pycodestyle]
    max-doc-length = 72

[tool.ruff.pydocstyle]
    # waiting on sphinx convention being added
    convention = "pep257"

[tool.ruff.lint.mccabe]
    max-complexity = 7

[tool.ruff.lint.flake8-type-checking]
    strict = true
