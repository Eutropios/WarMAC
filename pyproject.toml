[build-system]
    build-backend = "poetry.core.masonry.api"
    requires      = ["poetry-core>=1.0.0"]

[tool.poetry]
    authors = ["Noah Jenner <noah.jenner@proton.me>"]
    classifiers = [
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: Implementation :: CPython",
        "Topic :: Utilities",
        "Typing :: Typed",
    ]
    description = "An average platinum price calculator for tradeable items in Warframe."
    # documentation = ""
    # include = [""]
    keywords    = ["warframe ", "warframe calculator", "warframe market"]
    license     = "MIT"
    maintainers = ["Noah Jenner <noah.jenner@proton.me>"]
    name        = "WarMAC"
    packages    = [{include = "warmac"}]
    readme      = "README.md"
    repository  = "https://github.com/Eutropios/WarMAC"
    version     = "0.0.1"
    [tool.poetry.dependencies]
        python  = "^3.10"
        urllib3 = "^2.0.4"
    [tool.poetry.scripts]
        warmac = "warmac.main:main"
    [tool.poetry.urls]
        "Bug Tracker" = "https://github.com/Eutropios/WarMAC/issues"

[tool.mypy]
    exclude = [
        '\.git',
        '\.hg',
        '\.mypy_cache',
        '\.ruff_cache',
        '\.tox',
        '\.venv',
        '_build',
        'buck-out',
        'build',
        'dist',
    ]
    python_version = "3.10"
    strict = true

[tool.ruff]
    ignore = [
        "AIR",
        "DJ",
        "ERA001",
        "FIX",
        "INT",
        "ISC002",
        "NPY",
        "PD",
        "PT",
        "SLF001",
        "SLOT",
        "T20",
        "TD",
    ]
    line-length = 88
    select = ["ALL"]
    show-fixes = true

    [tool.ruff.per-file-ignores]
        "tests/__init__.py"  = ["D104"]
        "warmac/__init__.py" = ["D104"]

    [tool.ruff.pycodestyle]
        max-doc-length = 72

    [tool.ruff.pydocstyle]
        convention = "pep257"

[tool.black]
    exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | \.ruff_cache
)/
'''
    include = '\.pyi?$'
    line-length = 88
    verbose = true
